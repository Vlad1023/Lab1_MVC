// <auto-generated />
using System;
using Lab1_MVC;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Lab1_MVC.Migrations
{
    [DbContext(typeof(AddResponcesDbContext))]
    partial class AddResponcesDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Lab1_MVC.Models.WorkTypes", b =>
                {
                    b.Property<int>("WorkTypesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PaymentPerDay")
                        .HasColumnType("float");

                    b.HasKey("WorkTypesId");

                    b.ToTable("WorkTypes");
                });

            modelBuilder.Entity("Lab1_MVC.Models.Workers", b =>
                {
                    b.Property<int>("WorkersId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Patronymic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Payment")
                        .HasColumnType("float");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("WorkersId");

                    b.ToTable("Workers");
                });

            modelBuilder.Entity("Lab1_MVC.Models.Works", b =>
                {
                    b.Property<int>("WorksId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("WorkTypesId")
                        .HasColumnType("int");

                    b.Property<int>("WorkersId")
                        .HasColumnType("int");

                    b.HasKey("WorksId");

                    b.HasIndex("WorkTypesId");

                    b.HasIndex("WorkersId");

                    b.ToTable("Works");
                });

            modelBuilder.Entity("Lab1_MVC.Models.Works", b =>
                {
                    b.HasOne("Lab1_MVC.Models.WorkTypes", "WorkTypes")
                        .WithMany("Works")
                        .HasForeignKey("WorkTypesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lab1_MVC.Models.Workers", "Workers")
                        .WithMany("Works")
                        .HasForeignKey("WorkersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Workers");

                    b.Navigation("WorkTypes");
                });

            modelBuilder.Entity("Lab1_MVC.Models.WorkTypes", b =>
                {
                    b.Navigation("Works");
                });

            modelBuilder.Entity("Lab1_MVC.Models.Workers", b =>
                {
                    b.Navigation("Works");
                });
#pragma warning restore 612, 618
        }
    }
}
